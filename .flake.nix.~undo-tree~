(undo-tree-save-format-version . 1)
"803a990520bd69522a0118ebf0eeb9a2d8202422"
[nil nil nil nil (26132 20474 224851 439000) 0 nil]
([nil nil ((nil rear-nonsticky nil 792 . 793) (nil fontified nil 1 . 793) (1 . 793) (t . -1)) nil (26132 20474 224846 680000) 0 nil])
([nil nil ((571 . 573) (t 26132 20474 286393 626000)) nil (26132 20660 895233 562000) 0 nil])
([nil nil ((598 . 600)) nil (26132 20660 895232 990000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -599) (undo-tree-id0 . -1) 600) nil (26132 20660 895232 249000) 0 nil])
([nil nil ((599 . 600)) nil (26132 20660 895215 557000) 0 nil])
([nil nil ((755 . 768) (t 26132 20660 899279 126000)) nil (26132 20704 387122 916000) 0 nil])
([nil nil ((768 . 771)) nil (26132 20704 387122 575000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -770) (undo-tree-id2 . -1) 771) nil (26132 20704 387121 704000) 0 nil])
([nil nil ((770 . 772)) nil (26132 20704 387120 421000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -771) (undo-tree-id1 . -1) 772) nil (26132 20704 387119 600000) 0 nil])
([nil nil ((771 . 780)) nil (26132 20704 387107 85000) 0 nil])
([nil nil ((780 . 793) (t 26132 20704 390517 475000)) nil (26132 20848 635848 106000) 0 nil])
([nil nil ((nil rear-nonsticky nil 816 . 817) (nil fontified nil 793 . 817) (793 . 817)) nil (26132 20848 635847 425000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -792) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#(" " 0 1 (fontified t)) . -793) (undo-tree-id25 . -1) (#(" " 0 1 (fontified t)) . -794) (undo-tree-id26 . -1) (#(" " 0 1 (fontified t)) . -795) (undo-tree-id27 . -1) (#(" " 0 1 (fontified t)) . -796) (undo-tree-id28 . -1) (#(" " 0 1 (fontified t)) . -797) (undo-tree-id29 . -1) (#(" " 0 1 (fontified t)) . -798) (undo-tree-id30 . -1) (#(" " 0 1 (fontified t)) . -799) (undo-tree-id31 . -1) (#(" " 0 1 (fontified t)) . -800) (undo-tree-id32 . -1) (#(" " 0 1 (fontified t)) . -801) (undo-tree-id33 . -1) (#(" " 0 1 (fontified t)) . -802) (undo-tree-id34 . -1) (#(" " 0 1 (fontified t)) . -803) (undo-tree-id35 . -1) 804) nil (26132 20848 635846 172000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -798) (undo-tree-id16 . -1) (#("n" 0 1 (fontified t)) . -799) (undo-tree-id17 . -1) (#("u" 0 1 (fontified t)) . -800) (undo-tree-id18 . -1) (#("p" 0 1 (fontified t)) . -801) (undo-tree-id19 . -1) (#("l" 0 1 (fontified t)) . -802) (undo-tree-id20 . -1) (#("o" 0 1 (fontified t)) . -803) (undo-tree-id21 . -1) (#("t" 0 1 (rear-nonsticky t fontified t)) . -804) (undo-tree-id22 . -1) 805) nil (26132 20848 635751 940000) 0 nil])
([nil nil ((798 . 803)) nil (26132 20848 635748 864000) 0 nil])
([nil nil ((803 . 805)) nil (26132 20848 635748 544000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -802) (undo-tree-id13 . -1) (#("a" 0 1 (fontified t)) . -803) (undo-tree-id14 . -1) (#("e" 0 1 (fontified t)) . -804) (undo-tree-id15 . -1) 805) nil (26132 20848 635748 43000) 0 nil])
([nil nil ((802 . 805)) nil (26132 20848 635746 329000) 0 nil])
([nil nil ((nil rear-nonsticky nil 823 . 824) (nil fontified nil 811 . 824) (nil fontified nil 805 . 811) (805 . 824)) nil (26132 20848 635745 969000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -806) (undo-tree-id8 . -1) (#(" " 0 1 (fontified t)) . -807) (undo-tree-id9 . -1) (#(" " 0 1 (fontified t)) . -808) (undo-tree-id10 . -1) (#(" " 0 1 (fontified t)) . -809) (undo-tree-id11 . -1) (#(" " 0 1 (fontified t)) . -810) (undo-tree-id12 . -1) 811) nil (26132 20848 635744 967000) 0 nil])
([nil nil ((806 . 818) (#(" " 0 1 (fontified nil)) . 806) (#(" " 0 1 (fontified nil)) . 805) (undo-tree-id7 . -1) (806 . 807)) nil (26132 20848 635742 21000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -823) (undo-tree-id0 . -1) (#("n" 0 1 (fontified t)) . -824) (undo-tree-id1 . -1) (#("u" 0 1 (fontified t)) . -825) (undo-tree-id2 . -1) (#("m" 0 1 (fontified t)) . -826) (undo-tree-id3 . -1) (#("a" 0 1 (fontified t)) . -827) (undo-tree-id4 . -1) (#("k" 0 1 (fontified t)) . -828) (undo-tree-id5 . -1) (#("e" 0 1 (rear-nonsticky t fontified t)) . -829) (undo-tree-id6 . -1) 830) nil (26132 20848 635740 238000) 0 nil])
([nil nil ((823 . 828)) nil (26132 20848 635720 980000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -572) (undo-tree-id0 . -1) 573 (t 26132 20848 639802 776000)) nil (26132 21267 363565 66000) 0 nil])
([nil nil ((572 . 573)) nil (26132 21267 363549 346000) 0 nil])
([nil nil ((573 . 586) (t 26132 21267 367118 361000)) nil (26132 23267 14158 57000) 0 nil])
([nil nil ((586 . 595)) nil (26132 23267 14153 117000) 0 nil])
([nil nil ((#("G" 0 1 (face font-lock-string-face fontified t)) . -39) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("C" 0 1 (face font-lock-string-face fontified t)) . -40) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (#("C" 0 1 (face font-lock-string-face fontified t)) . -41) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#("," 0 1 (face font-lock-string-face fontified t)) . -42) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -43) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (#("P" 0 1 (face font-lock-string-face fontified t)) . -44) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#("y" 0 1 (face font-lock-string-face fontified t)) . -45) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -46) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (#("h" 0 1 (face font-lock-string-face fontified t)) . -47) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -48) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -49) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (#("3" 0 1 (face font-lock-string-face fontified t)) . -50) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (#("," 0 1 (face font-lock-string-face fontified t)) . -51) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -52) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (#("T" 0 1 (face font-lock-string-face fontified t)) . -53) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -54) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (#("x" 0 1 (face font-lock-string-face fontified t)) . -55) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (#("L" 0 1 (face font-lock-string-face fontified t)) . -56) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -57) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -58) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -59) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) 60 (t 26132 23267 18022 746000)) nil (26132 23420 489012 430000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-string-face fontified t)) . -20) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -21) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("f" 0 1 (face font-lock-string-face fontified t)) . -22) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -23) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -24) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("k" 0 1 (face font-lock-string-face fontified t)) . -25) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -26) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -27) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("w" 0 1 (face font-lock-string-face fontified t)) . -28) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -29) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -30) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("h" 0 1 (face font-lock-string-face fontified t)) . -31) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -32) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("R" 0 1 (face font-lock-string-face fontified t)) . -33) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#("O" 0 1 (face font-lock-string-face fontified t)) . -34) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (#("C" 0 1 (face font-lock-string-face fontified t)) . -35) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -36) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("," 0 1 (face font-lock-string-face fontified t)) . -37) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -38) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) 39) nil (26132 23420 488940 232000) 0 nil])
([nil nil ((20 . 32)) nil (26132 23420 488868 204000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-string-face fontified t)) . -30) (undo-tree-id0 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -31) (undo-tree-id1 . -1) 32) nil (26132 23420 488867 523000) 0 nil])
([nil nil ((30 . 35)) nil (26132 23420 488850 290000) 0 nil])
([nil nil ((697 . 709) (#(" " 0 1 (fontified nil)) . 696) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (697 . 698) (t 26132 23420 497609 366000)) nil (26132 23823 249876 495000) 0 nil])
([nil nil ((nil rear-nonsticky nil 725 . 726) (nil fontified nil 709 . 726) (709 . 726)) nil (26132 23823 249873 420000) 0 nil])
([nil nil ((726 . 728)) nil (26132 23823 249872 959000) 0 nil])
([nil nil ((726 . 730) (#("  " 0 2 (fontified t)) . 726) (undo-tree-id5 . -2) 728) nil (26132 23823 249872 628000) 0 nil])
([nil nil ((726 . 732) (#("    " 0 4 (fontified t)) . 726) (undo-tree-id4 . -4) 730) nil (26132 23823 249871 756000) 0 nil])
([nil nil ((726 . 734) (#("      " 0 6 (fontified t)) . 726) (undo-tree-id3 . -6) 732) nil (26132 23823 249870 915000) 0 nil])
([nil nil ((726 . 736) (#("        " 0 8 (fontified t)) . 726) (undo-tree-id2 . -8) 734) nil (26132 23823 249870 173000) 0 nil])
([nil nil ((726 . 738) (#("          " 0 10 (fontified t)) . 726) (undo-tree-id1 . -10) 736) nil (26132 23823 249868 991000) 0 nil])
([nil nil ((#("# ここにROCmのパッケージを追加" 0 2 (face font-lock-comment-face fontified t) 2 18 (face font-lock-comment-face fontified t)) . 738) (undo-tree-id0 . -18) 756) nil (26132 23823 249867 398000) 0 nil])
([nil nil ((675 . 676)) nil (26132 23823 249855 886000) 0 nil])
([nil nil ((nil rear-nonsticky nil 692 . 693) (nil fontified nil 677 . 693) (nil fontified nil 675 . 677) (675 . 693)) nil (26132 23823 249855 475000) 0 nil])
([nil nil ((nil rear-nonsticky nil 774 . 775) (nil fontified nil 757 . 775) (757 . 775)) nil (26132 23823 249855 34000) 0 nil])
([nil nil ((775 . 788)) nil (26132 23823 249854 694000) 0 nil])
([nil nil ((nil rear-nonsticky nil 808 . 809) (nil fontified nil 788 . 809) (788 . 809)) nil (26132 23823 249854 433000) 0 nil])
([nil nil ((694 . 704)) nil (26132 23823 249854 33000) 0 nil])
([nil nil ((704 . 706)) nil (26132 23823 249853 742000) 0 nil])
([nil nil ((nil rear-nonsticky nil 744 . 745) (nil fontified nil 740 . 745) (740 . 745)) nil (26132 23823 249853 411000) 0 nil])
([nil nil ((nil rear-nonsticky nil 778 . 779) (nil fontified nil 774 . 779) (774 . 779)) nil (26132 23823 249852 620000) 0 nil])
([nil nil ((nil rear-nonsticky nil 814 . 815) (nil fontified nil 810 . 815) (810 . 815)) nil (26132 23823 249848 41000) 0 nil])
([nil nil ((740 . 741) (t 26132 23823 254888 22000)) nil (26132 23829 618242 997000) 0 nil])
([nil current ((#("#" 0 1 (face font-lock-comment-face fontified t)) . -740) (undo-tree-id0 . -1) 741 (t 26132 23829 622030 297000)) nil (26132 24004 845182 681000) 0 nil])
nil
